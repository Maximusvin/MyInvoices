{"version":3,"sources":["UI/Layout/Layout.style.js","UI/Layout/Layout.js","components/App/App.js","components/AppBar/AppBar.style.js","components/AppBar/AppBar.js","UI/SectionWrap/SectionWrap.style.js","UI/SectionWrap/SectionWrap.js","services/invoices-api.js","redux/invoices/invoicesActions.js","redux/invoices/invoicesSelectors.js","components/Invoices/Invoices.style.js","components/Invoices/Invoices.js","redux/invoices/invoicesOperations.js","components/CreateInvoices/CreateInvoices.style.js","components/CreateInvoices/CreateInvoices.js","components/Table/Table.style.js","components/Table/Table.js","redux/invoices/invoicesReducer.js","redux/store.js","index.js"],"names":["Container","styled","div","Layout","children","App","path","exact","component","Invoices","CreateInvoices","Header","header","Title","h3","AppBar","defaultProps","Section","SectionWrap","title","fetchInvoices","a","axios","get","data","defaults","baseURL","fetchInvoicesRequest","createAction","fetchEInvoicesSuccess","fetchInvoicesError","getAllInvoices","state","invoices","entities","InvoicesWrap","section","Button","Link","dispatch","useDispatch","useSelector","useEffect","invoicesAPI","to","button","onClick","console","log","TableWrap","table","Thead","thead","Tr","tr","Th","th","Td","td","props","isActive","Table","map","_id","number","date_created","date_supplied","comment","createReducer","_","payload","isLoading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","thunk","store","configureStore","reducer","invoicesReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0c2ccbd.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n\n  @media (max-width: 1283px) {\n    width: 940px;\n  }\n\n  @media (max-width: 992px) {\n    width: 700px;\n  }\n\n  @media (max-width: 768px) {\n    width: 520px;\n  }\n\n  @media (max-width: 576px) {\n    width: 90%;\n  }\n`;\n","import { Container } from './Layout.style';\n\nconst Layout = ({ children }) => <Container>{children}</Container>;\n\nexport default Layout;\n","import { Switch, Route } from 'react-router-dom';\n// import { Header, Footer, Main, Home, Questions } from 'components';\n// import { AuthPage, ContactsPage, UseFulPage } from 'views';\nimport { Layout } from 'UI/Layout';\nimport { Invoices, CreateInvoices } from 'components';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact component={Invoices} />\n        <Route path=\"/create-invoice\" component={CreateInvoices} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  width: 100%;\n  position: relative;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 20px;\n  color: rgba(128, 128, 128, 1);\n  border-left: 4px solid rgba(128, 128, 128, 0.4);\n  margin-bottom: 30px;\n\n  ::before {\n    display: block;\n    position: absolute;\n    height: 1px;\n    width: 85%;\n    content: '';\n    background: rgba(128, 128, 128, 0.4);\n    top: 50%;\n    right: 0;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const Title = styled.h3``;\n","import PropTypes from 'prop-types';\nimport { Header, Title } from './AppBar.style';\n\nconst AppBar = ({ children }) => {\n  return <Header>{children && <Title>{children}</Title>}</Header>;\n};\n\nAppBar.defaultProps = {\n  children: '',\n};\n\nAppBar.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\nexport default AppBar;\n","import styled from 'styled-components';\n\nexport const Section = styled.div`\n  padding-top: 35px;\n  padding-bottom: 35px;\n  background-color: #fff;\n  padding-left: 24px;\n  padding-right: 24px;\n  border: 1px solid rgba(128, 128, 128, 0.4);\n  margin-bottom: 30px;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 15px;\n`;\n","import PropTypes from 'prop-types';\nimport { Section, Title } from './SectionWrap.style';\n\nconst SectionWrap = ({ title, children }) => (\n  <Section>\n    {title && <Title>{title}</Title>}\n    {children}\n  </Section>\n);\n\nSectionWrap.defaultProps = {\n  title: '',\n  children: '',\n};\n\nSectionWrap.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default SectionWrap;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport async function fetchInvoices() {\n  const { data } = await axios.get(`/invoices`);\n  return data;\n}\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchInvoicesRequest = createAction(\n  'invoices/fetchInvoicesRequest',\n);\n\nexport const fetchEInvoicesSuccess = createAction(\n  'invoices/fetchEInvoicesSuccess',\n);\n\nexport const fetchInvoicesError = createAction('invoices/fetchInvoicesError');\n","export const getAllInvoices = state => state.invoices.entities;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const InvoicesWrap = styled.section`\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Button = styled(Link)`\n  padding: 10px 25px;\n  border-radius: 5px;\n  color: #fff;\n  font-weight: 600;\n  background-color: rgb(11, 11, 255);\n  cursor: pointer;\n`;\n","import { useEffect } from 'react';\nimport { Table, AppBar } from 'components';\nimport { SectionWrap } from 'UI/SectionWrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchInvoices } from 'redux/invoices/invoicesOperations';\nimport { getAllInvoices } from 'redux/invoices/invoicesSelectors';\nimport { InvoicesWrap, Button } from './Invoices.style';\n\nconst Invoices = () => {\n  const dispatch = useDispatch();\n  const invoices = useSelector(getAllInvoices);\n\n  useEffect(() => {\n    dispatch(fetchInvoices());\n  }, [dispatch]);\n\n  return (\n    <InvoicesWrap>\n      <AppBar>Invoices</AppBar>\n\n      <SectionWrap title={'Actions'}>\n        <Button to=\"/create-invoice\">Add new</Button>\n      </SectionWrap>\n\n      <SectionWrap title={'Invoices'}>\n        <Table invoices={invoices} />\n      </SectionWrap>\n    </InvoicesWrap>\n  );\n};\n\nexport default Invoices;\n","import * as invoicesAPI from 'services/invoices-api';\nimport {\n  fetchInvoicesRequest,\n  fetchEInvoicesSuccess,\n  fetchInvoicesError,\n} from './invoicesActions';\n\nexport const fetchInvoices = () => async dispatch => {\n  dispatch(fetchInvoicesRequest());\n\n  try {\n    const invoices = await invoicesAPI.fetchInvoices();\n    dispatch(fetchEInvoicesSuccess(invoices));\n  } catch (error) {\n    dispatch(fetchInvoicesError(error));\n  }\n};\n","import styled from 'styled-components';\n\nexport const InvoicesWrap = styled.section`\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 25px;\n  border-radius: 5px;\n  color: #fff;\n  font-weight: 600;\n  background-color: rgb(11, 11, 255);\n  cursor: pointer;\n`;\n","import { AppBar } from 'components';\nimport { SectionWrap } from 'UI/SectionWrap';\nimport { useDispatch } from 'react-redux';\n\nimport { InvoicesWrap, Button } from './CreateInvoices.style';\n\nconst CreateInvoices = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    console.log('save');\n  };\n\n  return (\n    <InvoicesWrap>\n      <AppBar>Create Invoice</AppBar>\n\n      <SectionWrap>\n        sd\n        <Button onClick={handleSubmit}>Save</Button>\n      </SectionWrap>\n    </InvoicesWrap>\n  );\n};\n\nexport default CreateInvoices;\n","import styled from 'styled-components';\n\nexport const TableWrap = styled.table`\n  width: 100%;\n  text-align: center;\n  border-collapse: collapse;\n`;\n\nexport const Thead = styled.thead`\n  background-color: #ddd;\n  border-radius: 5px 5px 0 0;\n  color: rgba(128, 128, 128, 1);\n`;\n\nexport const Tr = styled.tr`\n  border-bottom: 1px solid rgba(128, 128, 128, 0.4);\n`;\n\nexport const Th = styled.th`\n  padding: 15px 0;\n`;\n\nexport const Td = styled.td`\n  padding: 15px 0;\n  color: ${props => (props.isActive ? 'blue' : 'rgba(128, 128, 128, 1)')};\n  width: 25%;\n\n  ::first-letter {\n    text-transform: uppercase;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { TableWrap, Thead, Tr, Th, Td } from './Table.style';\n\nconst Table = ({ invoices }) => {\n  return (\n    <TableWrap>\n      <Thead>\n        <Tr>\n          <Th>Create</Th>\n          <Th>No</Th>\n          <Th>Supple</Th>\n          <Th>Comment</Th>\n        </Tr>\n      </Thead>\n\n      <tbody>\n        {invoices.map(\n          ({ _id, number, date_created, date_supplied, comment }) => (\n            <Tr key={_id}>\n              <Td>{date_created}</Td>\n              <Td isActive={true}>INV-{number}</Td>\n              <Td>{date_supplied}</Td>\n              <Td>{comment}</Td>\n            </Tr>\n          ),\n        )}\n      </tbody>\n    </TableWrap>\n  );\n};\n\nTable.defaultProps = {\n  invoices: [],\n};\n\nTable.propTypes = {\n  invoices: PropTypes.array.isRequired,\n};\n\nexport default Table;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  fetchInvoicesRequest,\n  fetchEInvoicesSuccess,\n  fetchInvoicesError,\n} from './invoicesActions';\n\nconst entities = createReducer([], {\n  [fetchEInvoicesSuccess]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchInvoicesRequest]: () => true,\n  [fetchEInvoicesSuccess]: () => false,\n  [fetchInvoicesError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchInvoicesError]: (_, { payload }) => payload,\n  [fetchInvoicesRequest]: () => null,\n});\n\nexport default combineReducers({\n  entities,\n  isLoading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport invoicesReducer from './invoices/invoicesReducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n  thunk,\n];\n\nexport const store = configureStore({\n  reducer: { invoices: invoicesReducer },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './components';\nimport { store } from 'redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}