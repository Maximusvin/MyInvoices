{"version":3,"sources":["UI/Layout/Layout.style.js","UI/Layout/Layout.js","components/App/App.js","components/AppBar/AppBar.style.js","components/AppBar/AppBar.js","UI/SectionWrap/SectionWrap.style.js","UI/SectionWrap/SectionWrap.js","services/invoices-api.js","redux/invoices/invoicesActions.js","redux/invoices/invoicesSelectors.js","components/Invoices/Invoices.style.js","components/Invoices/Invoices.js","redux/invoices/invoicesOperations.js","components/CreateInvoices/CreateInvoices.style.js","components/CreateInvoices/CreateInvoices.js","components/InvoicesForm/InvoicesForm.style.js","components/InvoicesForm/InvoicesForm.js","components/Table/Table.style.js","components/Table/Table.js","redux/invoices/invoicesReducer.js","redux/store.js","index.js"],"names":["Container","styled","div","Layout","children","App","path","exact","component","Invoices","CreateInvoices","Header","header","Title","h3","AppBar","defaultProps","Section","SectionWrap","title","fetchInvoices","a","axios","get","data","invoice","post","defaults","baseURL","fetchInvoicesRequest","createAction","fetchEInvoicesSuccess","fetchInvoicesError","getAllInvoices","state","invoices","entities","InvoicesWrap","section","Button","Link","dispatch","useDispatch","useSelector","useEffect","invoicesAPI","to","FormWrap","InputWrap","Input","input","Textarea","textarea","Label","label","button","validationSchema","yup","shape","inv","required","test","val","toString","length","integer","positive","invoiceDate","supplyDate","comment","min","max","CustomInput","field","placeholder","type","name","CustomTextarea","InvoicesForm","location","useLocation","history","useHistory","handleSubmit","createInvoice","number","date_created","date_supplied","push","pathname","initialValues","onSubmit","values","actions","setSubmitting","resetForm","TableWrap","table","Thead","thead","Tr","tr","Tbody","tbody","Th","th","Td","td","props","isActive","IconButton","Table","map","_id","id","createReducer","_","payload","isLoading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","thunk","store","configureStore","reducer","invoicesReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6a8534d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n\n  @media (max-width: 1283px) {\n    width: 940px;\n  }\n\n  @media (max-width: 992px) {\n    width: 700px;\n  }\n\n  @media (max-width: 768px) {\n    width: 520px;\n  }\n\n  @media (max-width: 576px) {\n    width: 90%;\n  }\n`;\n","import { Container } from './Layout.style';\n\nconst Layout = ({ children }) => <Container>{children}</Container>;\n\nexport default Layout;\n","import { Switch, Route } from 'react-router-dom';\n// import { Header, Footer, Main, Home, Questions } from 'components';\n// import { AuthPage, ContactsPage, UseFulPage } from 'views';\nimport { Layout } from 'UI/Layout';\nimport { Invoices, CreateInvoices } from 'components';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact component={Invoices} />\n        <Route path=\"/create-invoice\" component={CreateInvoices} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  width: 100%;\n  position: relative;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 20px;\n  color: rgba(128, 128, 128, 1);\n  border-left: 4px solid rgba(128, 128, 128, 0.4);\n  margin-bottom: 30px;\n\n  ::before {\n    display: block;\n    position: absolute;\n    height: 1px;\n    width: 85%;\n    content: '';\n    background: rgba(128, 128, 128, 0.4);\n    top: 50%;\n    right: 0;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const Title = styled.h3``;\n","import PropTypes from 'prop-types';\nimport { Header, Title } from './AppBar.style';\n\nconst AppBar = ({ children }) => {\n  return <Header>{children && <Title>{children}</Title>}</Header>;\n};\n\nAppBar.defaultProps = {\n  children: '',\n};\n\nAppBar.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\nexport default AppBar;\n","import styled from 'styled-components';\n\nexport const Section = styled.div`\n  padding-top: 35px;\n  padding-bottom: 35px;\n  background-color: #fff;\n  padding-left: 24px;\n  padding-right: 24px;\n  border: 1px solid rgba(128, 128, 128, 0.4);\n  margin-bottom: 30px;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 15px;\n`;\n","import PropTypes from 'prop-types';\nimport { Section, Title } from './SectionWrap.style';\n\nconst SectionWrap = ({ title, children }) => (\n  <Section>\n    {title && <Title>{title}</Title>}\n    {children}\n  </Section>\n);\n\nSectionWrap.defaultProps = {\n  title: '',\n  children: '',\n};\n\nSectionWrap.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default SectionWrap;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4030';\n\nexport async function fetchInvoices() {\n  const { data } = await axios.get(`/invoices`);\n  return data;\n}\n\nexport async function createInvoice(invoice) {\n  await axios.post(`/invoices`, invoice);\n}\n\n// export async function createInvoice(invoice) {\n//   const options = {\n//     method: 'POST',\n//     headers: { 'Content-Type': 'application/json' },\n//     body: JSON.stringify(invoice),\n//   };\n//   return await fetch(`http://localhost:4030/invoices`, options).then(res =>\n//     res.json(),\n//   );\n// }\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchInvoicesRequest = createAction(\n  'invoices/fetchInvoicesRequest',\n);\n\nexport const fetchEInvoicesSuccess = createAction(\n  'invoices/fetchEInvoicesSuccess',\n);\n\nexport const fetchInvoicesError = createAction('invoices/fetchInvoicesError');\n","export const getAllInvoices = state => state.invoices.entities;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const InvoicesWrap = styled.section`\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Button = styled(Link)`\n  padding: 10px 25px;\n  border-radius: 5px;\n  color: #fff;\n  font-weight: 600;\n  background-color: rgb(11, 11, 255);\n  cursor: pointer;\n`;\n","import { useEffect } from 'react';\nimport { Table, AppBar } from 'components';\nimport { SectionWrap } from 'UI/SectionWrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchInvoices } from 'redux/invoices/invoicesOperations';\nimport { getAllInvoices } from 'redux/invoices/invoicesSelectors';\nimport { InvoicesWrap, Button } from './Invoices.style';\n\nconst Invoices = () => {\n  const dispatch = useDispatch();\n  const invoices = useSelector(getAllInvoices);\n\n  useEffect(() => {\n    dispatch(fetchInvoices());\n  }, [dispatch]);\n\n  return (\n    <InvoicesWrap>\n      <AppBar>Invoices</AppBar>\n\n      <SectionWrap title={'Actions'}>\n        <Button to=\"/create-invoice\">Add new</Button>\n      </SectionWrap>\n\n      <SectionWrap title={'Invoices'}>\n        <Table invoices={invoices} />\n      </SectionWrap>\n    </InvoicesWrap>\n  );\n};\n\nexport default Invoices;\n","import * as invoicesAPI from 'services/invoices-api';\nimport {\n  fetchInvoicesRequest,\n  fetchEInvoicesSuccess,\n  fetchInvoicesError,\n} from './invoicesActions';\n\nexport const fetchInvoices = () => async dispatch => {\n  dispatch(fetchInvoicesRequest());\n\n  try {\n    const invoices = await invoicesAPI.fetchInvoices();\n    dispatch(fetchEInvoicesSuccess(invoices));\n  } catch (error) {\n    dispatch(fetchInvoicesError(error));\n  }\n};\n","import styled from 'styled-components';\n\nexport const InvoicesWrap = styled.section`\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n","import { AppBar, InvoicesForm } from 'components';\n\nimport { SectionWrap } from 'UI/SectionWrap';\nimport { InvoicesWrap } from './CreateInvoices.style';\n\nconst CreateInvoices = () => {\n  return (\n    <InvoicesWrap>\n      <AppBar>Create Invoice</AppBar>\n\n      <SectionWrap>\n        <InvoicesForm />\n      </SectionWrap>\n    </InvoicesWrap>\n  );\n};\n\nexport default CreateInvoices;\n","import styled from 'styled-components';\n\nexport const FormWrap = styled.div`\n  padding: 35px 25px;\n  border: 1px solid rgba(128, 128, 128, 0.4);\n  margin-bottom: 30px;\n`;\n\nexport const InputWrap = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  grid-gap: 35px;\n  margin-bottom: 35px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 10px 15px;\n  border: 1px solid rgba(128, 128, 128, 0.4);\n  border-radius: 5px;\n  width: 100%;\n  margin-top: 10px;\n`;\n\nexport const Textarea = styled.textarea`\n  display: block;\n  padding: 10px 15px;\n  border: 1px solid rgba(128, 128, 128, 0.4);\n  border-radius: 5px;\n  width: 100%;\n  margin-top: 10px;\n  outline: none;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: 600;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  padding: 10px 25px;\n  border-radius: 5px;\n  color: #fff;\n  font-weight: 600;\n  background-color: rgb(11, 11, 255);\n  cursor: pointer;\n  margin-left: auto;\n`;\n","import { Field, Form, Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useLocation, useHistory } from 'react-router';\nimport { createInvoice } from 'services/invoices-api';\nimport {\n  FormWrap,\n  Input,\n  Label,\n  Button,\n  InputWrap,\n  Textarea,\n} from './InvoicesForm.style';\n\nconst validationSchema = yup.object().shape({\n  inv: yup\n    .number()\n    .required()\n    .test(\n      3,\n      'Minimum 3 and maximum 10 characters',\n      val => val && val.toString().length >= 3 && val.toString().length <= 10,\n    )\n    .integer()\n    .positive(),\n  invoiceDate: yup.string().required('Required'),\n  supplyDate: yup.string().required('Required'),\n  comment: yup\n    .string()\n    .required('Required')\n    .min(3, 'Minimum 3 characters')\n    .max(160, 'Maximum 160 characters'),\n});\n\nfunction CustomInput({ field, placeholder, type }) {\n  return (\n    <>\n      <Input {...field} type={type} placeholder={placeholder} />\n      <ErrorMessage name={field.name} component=\"span\" />\n    </>\n  );\n}\n\nfunction CustomTextarea({ field, placeholder }) {\n  return (\n    <>\n      <Textarea {...field} placeholder={placeholder} />\n      <ErrorMessage name={field.name} component=\"span\" />\n    </>\n  );\n}\n\nconst InvoicesForm = () => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const onGoMainPage = () => {\n    history.push((location.pathname = '/'));\n  };\n\n  const handleSubmit = ({ inv, invoiceDate, supplyDate, comment }) => {\n    const INV = {\n      number: inv,\n      date_created: invoiceDate,\n      date_supplied: supplyDate,\n      comment,\n    };\n\n    createInvoice(INV);\n    onGoMainPage();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        inv: '',\n        invoiceDate: '',\n        supplyDate: '',\n        comment: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n\n        actions.setSubmitting(false);\n        actions.resetForm({});\n      }}\n    >\n      <Form>\n        <FormWrap>\n          <InputWrap>\n            <Label>\n              Number:\n              <Field\n                name=\"inv\"\n                type=\"number\"\n                placeholder=\"Enter the number\"\n                component={CustomInput}\n              />\n            </Label>\n\n            <Label>\n              Invoice Date:\n              <Field\n                name=\"invoiceDate\"\n                type=\"date\"\n                placeholder=\"Select date\"\n                component={CustomInput}\n              />\n            </Label>\n\n            <Label>\n              Supply Date:\n              <Field\n                name=\"supplyDate\"\n                type=\"date\"\n                placeholder=\"Select date\"\n                component={CustomInput}\n              />\n            </Label>\n          </InputWrap>\n          <Label>\n            Comment:\n            <Field name=\"comment\" component={CustomTextarea} />\n          </Label>\n        </FormWrap>\n\n        <Button type=\"submit\">Save</Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default InvoicesForm;\n","import styled from 'styled-components';\n\nexport const TableWrap = styled.table`\n  width: 100%;\n  text-align: center;\n  border-collapse: collapse;\n`;\n\nexport const Thead = styled.thead`\n  background-color: #ddd;\n  border-radius: 5px 5px 0 0;\n  color: rgba(128, 128, 128, 1);\n`;\n\nexport const Tr = styled.tr`\n  border-bottom: 1px solid rgba(128, 128, 128, 0.4);\n  transition: all 0.2s linear;\n`;\n\nexport const Tbody = styled.tbody`\n  & ${Tr}:hover {\n    background-color: rgba(211, 211, 211, 0.4);\n  }\n`;\n\nexport const Th = styled.th`\n  padding: 15px 20px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const Td = styled.td`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 15px 20px;\n  color: ${props => (props.isActive ? 'blue' : 'rgba(128, 128, 128, 1)')};\n\n  :first-child {\n    width: 15%;\n  }\n\n  :nth-child(2) {\n    width: 15%;\n  }\n\n  :nth-child(3) {\n    width: 15%;\n  }\n\n  /* :not(:last-child) {\n    width: 23%;\n  } */\n\n  :last-child {\n    width: 10%;\n  }\n\n  ::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nexport const IconButton = styled.button`\n  cursor: pointer;\n  background: transparent;\n  font-size: 16px;\n  color: rgba(128, 128, 128, 1);\n  transition: color 0.2s linear;\n\n  :not(:last-child) {\n    margin-right: 5px;\n  }\n\n  :hover {\n    color: #000;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { TableWrap, Thead, Tr, Th, Td, Tbody, IconButton } from './Table.style';\nimport { FaEdit } from 'react-icons/fa';\nimport { MdDelete } from 'react-icons/md';\n\nconst Table = ({ invoices }) => {\n  return (\n    <TableWrap>\n      <Thead>\n        <Tr>\n          <Th>Create</Th>\n          <Th>No</Th>\n          <Th>Supple</Th>\n          <Th>Comment</Th>\n          <Th>Edit</Th>\n        </Tr>\n      </Thead>\n\n      <Tbody>\n        {invoices.map(\n          ({ _id, id, number, date_created, date_supplied, comment }) => (\n            <Tr key={_id || id}>\n              <Td>{date_created}</Td>\n              <Td isActive={true}>{`INV-${number}`}</Td>\n              <Td>{date_supplied}</Td>\n              <Td>{comment}</Td>\n              <Td>\n                <IconButton>\n                  <FaEdit />\n                </IconButton>\n                <IconButton>\n                  <MdDelete />\n                </IconButton>\n              </Td>\n            </Tr>\n          ),\n        )}\n      </Tbody>\n    </TableWrap>\n  );\n};\n\nTable.defaultProps = {\n  invoices: [],\n};\n\nTable.propTypes = {\n  invoices: PropTypes.array.isRequired,\n};\n\nexport default Table;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  fetchInvoicesRequest,\n  fetchEInvoicesSuccess,\n  fetchInvoicesError,\n} from './invoicesActions';\n\nconst entities = createReducer([], {\n  [fetchEInvoicesSuccess]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchInvoicesRequest]: () => true,\n  [fetchEInvoicesSuccess]: () => false,\n  [fetchInvoicesError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchInvoicesError]: (_, { payload }) => payload,\n  [fetchInvoicesRequest]: () => null,\n});\n\nexport default combineReducers({\n  entities,\n  isLoading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport invoicesReducer from './invoices/invoicesReducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n  thunk,\n];\n\nexport const store = configureStore({\n  reducer: { invoices: invoicesReducer },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './components';\nimport { store } from 'redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}